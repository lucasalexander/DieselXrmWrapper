<?xml version="1.0"?>
<configuration>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    <!-- This is the base simplified connection string. Username and password will be appended in code. -->
    <!-- If using onpremise or LiveId connections, you will need to add domain, etc. -->
    <add key="crmconnectionstring" value="Url=https://XXXXXXXX; "/>
    
    <!-- This is the user account that will make the query requests to CRM. -->
    <!-- Impersonation via service callerid will be used to run as the "correct" user. -->
    <add key="impersonatorcredentials" value="Username=lucas.alexander@XXXXXXX; Password=XXXXXX;"/>

    <!-- This is the name of the directory where the queries are stored. -->
    <!-- Path is relative to the website root. -->
    <add key="retrievequerydir" value="RetrieveQueries"/>
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5"/>
    <authentication mode="None" />
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
  </system.webServer>
  <system.serviceModel>
    <services>
      <service behaviorConfiguration="XrmWrapperBehaviors" name="DieselXrmSvcWrapper.SoapSvc">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="BasicHttpEndpointBinding"
          contract="DieselXrmSvcWrapper.ISoapSvc" />
      </service>
    </services>

    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpEndpointBinding">
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="UserName"/>
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>

    <behaviors>
      <serviceBehaviors>
        <behavior name="XrmWrapperBehaviors" >
          <serviceMetadata httpGetEnabled="true" />
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="DieselXrmSvcWrapper.CrmUsernamePasswordValidator, DieselXrmSvcWrapper" />
          </serviceCredentials>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    
    <serviceHostingEnvironment
      aspNetCompatibilityEnabled="True"
      minFreeMemoryPercentageToActivateService="1"
      multipleSiteBindingsEnabled="True"
      />
  </system.serviceModel>
</configuration>
